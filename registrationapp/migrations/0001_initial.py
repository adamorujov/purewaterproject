# Generated by Django 5.1.4 on 2024-12-09 16:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('productapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FilterChangerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ad, Soyad')),
            ],
            options={
                'verbose_name': 'Filter dəyişdirən',
                'verbose_name_plural': 'Filter dəyişdirənlər',
            },
        ),
        migrations.CreateModel(
            name='InstallmentInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(verbose_name='İlkin məbləğ')),
                ('paid_amount', models.FloatField(verbose_name='Ödənilən məbləğ')),
                ('remaining_amount', models.FloatField(verbose_name='Qalan məbləğ')),
                ('overdue_amount', models.FloatField(verbose_name='Gecikən məbləğ')),
                ('refund_amount', models.FloatField(verbose_name='Geri ödənilən məbləğ')),
                ('payment_amount', models.FloatField(verbose_name='Ödəniş miqdarı')),
                ('installment_count', models.IntegerField(verbose_name='Taksit sayı')),
                ('start_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Taksit məlumatı',
                'verbose_name_plural': 'Taksit məlumatları',
            },
        ),
        migrations.CreateModel(
            name='PaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Endirimin tipi')),
                ('discount_percentage', models.FloatField(blank=True, null=True, verbose_name='Endirim faizi')),
                ('discount_amount', models.FloatField(blank=True, null=True, verbose_name='Endirim miqdarı')),
                ('total_amount', models.FloatField(verbose_name='Cəmi ödəniş')),
            ],
            options={
                'verbose_name': 'Ödəniş',
                'verbose_name_plural': 'Ödəniş məlumatları',
            },
        ),
        migrations.CreateModel(
            name='SellerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Ad, Soyad')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon nömrəsi')),
                ('salary', models.FloatField(blank=True, null=True, verbose_name='Maaş')),
                ('salary_type', models.CharField(blank=True, choices=[('N', 'Net'), ('G', 'Gross')], max_length=1, null=True, verbose_name='Maaş növü')),
                ('premier', models.FloatField(blank=True, null=True, verbose_name='Premyera')),
            ],
            options={
                'verbose_name': 'Satıcı',
                'verbose_name_plural': 'Satıcılar',
            },
        ),
        migrations.CreateModel(
            name='ClientModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Ad, Soyad')),
                ('father_name', models.CharField(max_length=20, verbose_name='Ata adı')),
                ('phone_number1', models.CharField(max_length=20, verbose_name='Telefon nömrəsi')),
                ('phone_number2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Əlavə telefon nömrəsi')),
                ('home_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ev nömrəsi')),
                ('identification', models.CharField(max_length=20, verbose_name='Şəxsiyyət vəsiqəsinin seriya nömrəsi')),
                ('address', models.TextField(verbose_name='Ünvan')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Qeyd')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Satış tarixi')),
                ('city', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='city_client', to='productapp.citymodel', verbose_name='Şəhər/Rayon')),
                ('client_gifts', models.ManyToManyField(blank=True, related_name='gift_clients', to='productapp.giftmodel', verbose_name='Hədiyyələr')),
                ('client_product', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_client', to='productapp.productmodel', verbose_name='Məhsul')),
                ('village', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='village_client', to='productapp.villagemodel', verbose_name='Kənd')),
            ],
            options={
                'verbose_name': 'Müştəri',
                'verbose_name_plural': 'Müştərilər',
            },
        ),
        migrations.CreateModel(
            name='InstallmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_date', models.DateField(verbose_name='Plan üzrə tarix')),
                ('installment_amount', models.FloatField(verbose_name='Plan üzrə məbləğ')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Ödəniş tarixi')),
                ('payment_amount', models.FloatField(verbose_name='Ödəniş miqdarı')),
                ('debt_amount', models.FloatField(verbose_name='Qalıq borc')),
                ('payment_type', models.CharField(choices=[('N', 'Nağd'), ('NS', 'Nağdsız')], default='N', max_length=2, verbose_name='Ödəniş növü')),
                ('status', models.CharField(choices=[('O', 'Ödənilib'), ('OM', 'Ödənilməyib')], default='OM', max_length=2, verbose_name='Status')),
                ('installmentinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installments', to='registrationapp.installmentinfomodel', verbose_name='Taksit məlumatları')),
            ],
            options={
                'verbose_name': 'Taksit',
                'verbose_name_plural': 'Taksitlər',
            },
        ),
        migrations.CreateModel(
            name='RegistrationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'Aktiv'), ('OT', 'Ödəniş tamamlanıb'), ('IO', 'İmtina olunan')], default='A', max_length=2, verbose_name='Status')),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_registration', to='registrationapp.clientmodel', verbose_name='Müştəri')),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_registration', to='registrationapp.paymentmodel', verbose_name='Ödəniş')),
                ('sellers', models.ManyToManyField(related_name='seller_registrations', to='registrationapp.sellermodel', verbose_name='Satıcılar')),
            ],
            options={
                'verbose_name': 'Qeydiyyat',
                'verbose_name_plural': 'Qeydiyyatlar',
            },
        ),
        migrations.AddField(
            model_name='installmentinfomodel',
            name='registration',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='installmentinfo', to='registrationapp.registrationmodel', verbose_name='Qeydiyyat'),
        ),
        migrations.CreateModel(
            name='ChangeFilterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_count', models.IntegerField(default=0, verbose_name='Dəyişim sayı')),
                ('category', models.CharField(choices=[('F', 'Birinci kateqoriya'), ('S', 'İkinci kateqoriya'), ('T', 'Üçüncü kateqoriya')], max_length=1, verbose_name='Kateqoriya')),
                ('period', models.FloatField(editable=False, verbose_name='Period')),
                ('change_status', models.CharField(choices=[('D', 'Dəyişdirilib'), ('DM', 'Dəyişdirilməyib')], max_length=2, verbose_name='Dəyişim statusu')),
                ('date', models.DateField(verbose_name='Dəyişim tarixi')),
                ('payment_status', models.CharField(choices=[('O', 'Ödənişli'), ('OS', 'Ödənişsiz')], default='OS', max_length=2, verbose_name='Ödəniş statusu')),
                ('changers', models.ManyToManyField(blank=True, related_name='changer_changes', to='registrationapp.filterchangermodel', verbose_name='Filter Dəyişdirənlər')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changefilters', to='registrationapp.registrationmodel', verbose_name='Qeydiyyat')),
            ],
            options={
                'verbose_name': 'Filtir dəyişimi',
                'verbose_name_plural': 'Filtir dəyişimləri',
            },
        ),
    ]
